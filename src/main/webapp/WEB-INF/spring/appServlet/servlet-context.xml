<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	
	<!-- @Controller 역할을 만들어준다 -->
	<annotation-driven />
	
	<!-- 정적 파일이 들어가는 위치 -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- JSP 페이지를 연동해준다 -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- 
		@Service, Repository, Componet..등의 어노테이션을 빈으로 등록해준다
	-->
	<beans:bean id="test" class="com.care.aaa.TestClass04"/>
	
	<context:component-scan base-package="com.care" />
	<!--
		위와 같은 내용 경로가 같은 부분까지만 작성하면 두가지 내용을 모두 사용가능하다
		<context:component-scan base-package="com.care.root" />
		<context:component-scan base-package="com.care.aaa" />
	-->
	
	
</beans:beans>
